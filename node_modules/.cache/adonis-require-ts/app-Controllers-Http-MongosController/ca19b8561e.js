"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Database_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Lucid/Database"));
const PartidoModelo_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/PartidoModelo"));
const Partido_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/Partido"));
const mongoose_1 = __importDefault(require("mongoose"));
class MongosController {
    async guardarMongo({ request, response }) {
        await mongoose_1.default.connect('mongodb+srv://AngelVargas2003:Angel2003@basesdedatosenlanube.fsnez.mongodb.net/fifa?retryWrites=true&w=majority');
        const id = request.input('id_partido');
        const comentarios = request.input('comentarios');
        console.log(id);
        const crear = new PartidoModelo_1.default.PartidoModelo({ "id_partido": id, "comentario": [comentarios] });
        crear.save();
        return response.json(crear);
    }
    async insertar({ request, response }) {
        try {
            const Partidos = new Partido_1.default();
            const local = request.input('local');
            const visitante = request.input('visitante');
            const Estadio = request.input('Estadio');
            Partidos.local = local;
            Partidos.visitante = visitante;
            Partidos.Estadio = Estadio;
            await Partidos.save();
            return response.status(200);
        }
        catch {
            return response.status(500);
        }
    }
    async modificar({ request, response }) {
        try {
            await mongoose_1.default.connect('mongodb+srv://AngelVargas2003:Angel2003@basesdedatosenlanube.fsnez.mongodb.net/fifa?retryWrites=true&w=majority');
            const id = request.input('id_partido');
            const comentarios = request.input('comentarios');
            console.log(id);
            response = await PartidoModelo_1.default.PartidoModelo.updateOne({ "id_partido": id }, { $push: { "comentario": comentarios } });
            return response;
        }
        catch {
            return response.badRequest('Hubo un error');
        }
    }
    async verPartido() {
        const partido = Database_1.default.query()
            .select('p.id as id', 'local.Nombre_Equipo as Local', 'visitante.Nombre_Equipo as Visitante', 'estadio.Nombre_Estadio as Estadio')
            .from('partidos as p')
            .join('equipos as local', 'p.local', '=', 'local.id')
            .join('equipos as visitante', 'p.visitante', '=', 'visitante.id')
            .join('estadios as estadio', 'p.Estadio', '=', 'estadio.id');
        return partido;
    }
    async verComent({ params, response }) {
        await mongoose_1.default.connect('mongodb+srv://AngelVargas2003:Angel2003@basesdedatosenlanube.fsnez.mongodb.net/fifa?retryWrites=true&w=majority');
        response = await PartidoModelo_1.default.PartidoModelo.find({ "id_partido": params.id });
        return response;
    }
    async delete({ auth, response, params }) {
        try {
            await auth.use('api').authenticate();
            const Equipos = await Partido_1.default.findOrFail(params.id);
            await Equipos.delete();
        }
        catch {
            return response.badRequest('ERROR');
        }
    }
}
exports.default = MongosController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9uZ29zQ29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk1vbmdvc0NvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSwyRkFBaUQ7QUFDakQsbUdBQW9EO0FBQ3BELHVGQUF3QztBQUN4Qyx3REFBK0I7QUFDL0IsTUFBcUIsZ0JBQWdCO0lBRTFCLEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBQyxPQUFPLEVBQUMsUUFBUSxFQUFDO1FBRXhDLE1BQU0sa0JBQVEsQ0FBQyxPQUFPLENBQUMsaUhBQWlILENBQUMsQ0FBQTtRQUN6SSxNQUFNLEVBQUUsR0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFBO1FBQ3BDLE1BQU0sV0FBVyxHQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUE7UUFDOUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUNmLE1BQU0sS0FBSyxHQUFDLElBQUksdUJBQWEsQ0FBQyxhQUFhLENBQUMsRUFBQyxZQUFZLEVBQUMsRUFBRSxFQUFDLFlBQVksRUFBQyxDQUFDLFdBQVcsQ0FBQyxFQUFDLENBQUMsQ0FBQTtRQUN6RixLQUFLLENBQUMsSUFBSSxFQUFFLENBQUE7UUFDWixPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7SUFDL0IsQ0FBQztJQUNNLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBQyxPQUFPLEVBQUMsUUFBUSxFQUFDO1FBRXBDLElBQ0E7WUFDSSxNQUFNLFFBQVEsR0FBQyxJQUFJLGlCQUFPLEVBQUUsQ0FBQTtZQUM1QixNQUFNLEtBQUssR0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1lBQ2xDLE1BQU0sU0FBUyxHQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUE7WUFDMUMsTUFBTSxPQUFPLEdBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQTtZQUN0QyxRQUFRLENBQUMsS0FBSyxHQUFDLEtBQUssQ0FBQTtZQUNwQixRQUFRLENBQUMsU0FBUyxHQUFDLFNBQVMsQ0FBQTtZQUM1QixRQUFRLENBQUMsT0FBTyxHQUFDLE9BQU8sQ0FBQTtZQUN4QixNQUFNLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtZQUNyQixPQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUE7U0FDOUI7UUFDRCxNQUNBO1lBQ0ksT0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1NBQzlCO0lBQ0wsQ0FBQztJQUNNLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFBQyxPQUFPLEVBQUMsUUFBUSxFQUFDO1FBRXJDLElBQ0E7WUFDQSxNQUFNLGtCQUFRLENBQUMsT0FBTyxDQUFDLGlIQUFpSCxDQUFDLENBQUE7WUFDekksTUFBTSxFQUFFLEdBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQTtZQUNwQyxNQUFNLFdBQVcsR0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFBO1lBQzlDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUE7WUFDZixRQUFRLEdBQUUsTUFBTSx1QkFBYSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsRUFBQyxZQUFZLEVBQUMsRUFBRSxFQUFDLEVBQUMsRUFBQyxLQUFLLEVBQUMsRUFBQyxZQUFZLEVBQUMsV0FBVyxFQUFDLEVBQUMsQ0FBQyxDQUFBO1lBQzNHLE9BQU8sUUFBUSxDQUFBO1NBQ2Q7UUFDRCxNQUNBO1lBQ0ksT0FBUSxRQUFRLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBQyxDQUFBO1NBQy9DO0lBQ0wsQ0FBQztJQUNNLEtBQUssQ0FBQyxVQUFVO1FBRW5CLE1BQU0sT0FBTyxHQUFDLGtCQUFRLENBQUMsS0FBSyxFQUFFO2FBQzdCLE1BQU0sQ0FBQyxZQUFZLEVBQUMsOEJBQThCLEVBQUMsc0NBQXNDLEVBQUMsbUNBQW1DLENBQUM7YUFDOUgsSUFBSSxDQUFDLGVBQWUsQ0FBQzthQUNyQixJQUFJLENBQUMsa0JBQWtCLEVBQUMsU0FBUyxFQUFDLEdBQUcsRUFBQyxVQUFVLENBQUM7YUFDakQsSUFBSSxDQUFDLHNCQUFzQixFQUFDLGFBQWEsRUFBQyxHQUFHLEVBQUMsY0FBYyxDQUFDO2FBQzdELElBQUksQ0FBQyxxQkFBcUIsRUFBQyxXQUFXLEVBQUMsR0FBRyxFQUFDLFlBQVksQ0FBQyxDQUFBO1FBQ3pELE9BQU8sT0FBTyxDQUFBO0lBQ2xCLENBQUM7SUFDTSxLQUFLLENBQUMsU0FBUyxDQUFDLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQztRQUVwQyxNQUFNLGtCQUFRLENBQUMsT0FBTyxDQUFDLGlIQUFpSCxDQUFDLENBQUE7UUFDekksUUFBUSxHQUFDLE1BQU0sdUJBQWEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUMsWUFBWSxFQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFBO1FBQ3pFLE9BQU8sUUFBUSxDQUFBO0lBQ25CLENBQUM7SUFDTSxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUMsSUFBSSxFQUFDLFFBQVEsRUFBQyxNQUFNLEVBQUM7UUFFdEMsSUFDQTtZQUNJLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQTtZQUNwQyxNQUFNLE9BQU8sR0FBQyxNQUFNLGlCQUFPLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQTtZQUNqRCxNQUFNLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQTtTQUV6QjtRQUFBLE1BQ0Q7WUFDSSxPQUFPLFFBQVEsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUE7U0FDdEM7SUFDTCxDQUFDO0NBRUo7QUE3RUQsbUNBNkVDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHR5cGUgeyBIdHRwQ29udGV4dENvbnRyYWN0IH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9IdHRwQ29udGV4dCdcbmltcG9ydCBEYXRhYmFzZSBmcm9tIFwiQGlvYzpBZG9uaXMvTHVjaWQvRGF0YWJhc2VcIlxuaW1wb3J0IFBhcnRpZG9Nb2RlbG8gZnJvbSBcIkFwcC9Nb2RlbHMvUGFydGlkb01vZGVsb1wiXG5pbXBvcnQgUGFydGlkbyBmcm9tIFwiQXBwL01vZGVscy9QYXJ0aWRvXCJcbmltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIlxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW9uZ29zQ29udHJvbGxlciBcbntcbiAgICBwdWJsaWMgYXN5bmMgZ3VhcmRhck1vbmdvKHtyZXF1ZXN0LHJlc3BvbnNlfSlcbiAgICB7XG4gICAgICAgIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vQW5nZWxWYXJnYXMyMDAzOkFuZ2VsMjAwM0BiYXNlc2RlZGF0b3NlbmxhbnViZS5mc25lei5tb25nb2RiLm5ldC9maWZhP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eScpXG4gICAgICAgIGNvbnN0IGlkPXJlcXVlc3QuaW5wdXQoJ2lkX3BhcnRpZG8nKVxuICAgICAgICBjb25zdCBjb21lbnRhcmlvcz1yZXF1ZXN0LmlucHV0KCdjb21lbnRhcmlvcycpXG4gICAgICAgIGNvbnNvbGUubG9nKGlkKVxuICAgICAgICBjb25zdCBjcmVhcj1uZXcgUGFydGlkb01vZGVsby5QYXJ0aWRvTW9kZWxvKHtcImlkX3BhcnRpZG9cIjppZCxcImNvbWVudGFyaW9cIjpbY29tZW50YXJpb3NdfSlcbiAgICAgICAgY3JlYXIuc2F2ZSgpXG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKGNyZWFyKVxuICAgIH1cbiAgICBwdWJsaWMgYXN5bmMgaW5zZXJ0YXIoe3JlcXVlc3QscmVzcG9uc2V9KVxuICAgIHtcbiAgICAgICAgdHJ5XG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnN0IFBhcnRpZG9zPW5ldyBQYXJ0aWRvKClcbiAgICAgICAgICAgIGNvbnN0IGxvY2FsPXJlcXVlc3QuaW5wdXQoJ2xvY2FsJylcbiAgICAgICAgICAgIGNvbnN0IHZpc2l0YW50ZT1yZXF1ZXN0LmlucHV0KCd2aXNpdGFudGUnKVxuICAgICAgICAgICAgY29uc3QgRXN0YWRpbz1yZXF1ZXN0LmlucHV0KCdFc3RhZGlvJylcbiAgICAgICAgICAgIFBhcnRpZG9zLmxvY2FsPWxvY2FsXG4gICAgICAgICAgICBQYXJ0aWRvcy52aXNpdGFudGU9dmlzaXRhbnRlXG4gICAgICAgICAgICBQYXJ0aWRvcy5Fc3RhZGlvPUVzdGFkaW9cbiAgICAgICAgICAgIGF3YWl0IFBhcnRpZG9zLnNhdmUoKVxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cygyMDApXG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2hcbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cyg1MDApXG4gICAgICAgIH1cbiAgICB9XG4gICAgcHVibGljIGFzeW5jIG1vZGlmaWNhcih7cmVxdWVzdCxyZXNwb25zZX0pXG4gICAge1xuICAgICAgICB0cnlcbiAgICAgICAge1xuICAgICAgICBhd2FpdCBtb25nb29zZS5jb25uZWN0KCdtb25nb2RiK3NydjovL0FuZ2VsVmFyZ2FzMjAwMzpBbmdlbDIwMDNAYmFzZXNkZWRhdG9zZW5sYW51YmUuZnNuZXoubW9uZ29kYi5uZXQvZmlmYT9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHknKVxuICAgICAgICBjb25zdCBpZD1yZXF1ZXN0LmlucHV0KCdpZF9wYXJ0aWRvJylcbiAgICAgICAgY29uc3QgY29tZW50YXJpb3M9cmVxdWVzdC5pbnB1dCgnY29tZW50YXJpb3MnKVxuICAgICAgICBjb25zb2xlLmxvZyhpZClcbiAgICAgICAgcmVzcG9uc2U9IGF3YWl0IFBhcnRpZG9Nb2RlbG8uUGFydGlkb01vZGVsby51cGRhdGVPbmUoe1wiaWRfcGFydGlkb1wiOmlkfSx7JHB1c2g6e1wiY29tZW50YXJpb1wiOmNvbWVudGFyaW9zfX0pXG4gICAgICAgIHJldHVybiByZXNwb25zZVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiAgcmVzcG9uc2UuYmFkUmVxdWVzdCgnSHVibyB1biBlcnJvcicpXG4gICAgICAgIH1cbiAgICB9XG4gICAgcHVibGljIGFzeW5jIHZlclBhcnRpZG8oKVxuICAgIHtcbiAgICAgICAgY29uc3QgcGFydGlkbz1EYXRhYmFzZS5xdWVyeSgpXG4gICAgICAgIC5zZWxlY3QoJ3AuaWQgYXMgaWQnLCdsb2NhbC5Ob21icmVfRXF1aXBvIGFzIExvY2FsJywndmlzaXRhbnRlLk5vbWJyZV9FcXVpcG8gYXMgVmlzaXRhbnRlJywnZXN0YWRpby5Ob21icmVfRXN0YWRpbyBhcyBFc3RhZGlvJylcbiAgICAgICAgLmZyb20oJ3BhcnRpZG9zIGFzIHAnKVxuICAgICAgICAuam9pbignZXF1aXBvcyBhcyBsb2NhbCcsJ3AubG9jYWwnLCc9JywnbG9jYWwuaWQnKVxuICAgICAgICAuam9pbignZXF1aXBvcyBhcyB2aXNpdGFudGUnLCdwLnZpc2l0YW50ZScsJz0nLCd2aXNpdGFudGUuaWQnKVxuICAgICAgICAuam9pbignZXN0YWRpb3MgYXMgZXN0YWRpbycsJ3AuRXN0YWRpbycsJz0nLCdlc3RhZGlvLmlkJylcbiAgICAgICAgcmV0dXJuIHBhcnRpZG9cbiAgICB9XG4gICAgcHVibGljIGFzeW5jIHZlckNvbWVudCh7cGFyYW1zLHJlc3BvbnNlfSlcbiAgICB7XG4gICAgICAgIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vQW5nZWxWYXJnYXMyMDAzOkFuZ2VsMjAwM0BiYXNlc2RlZGF0b3NlbmxhbnViZS5mc25lei5tb25nb2RiLm5ldC9maWZhP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eScpXG4gICAgICAgIHJlc3BvbnNlPWF3YWl0IFBhcnRpZG9Nb2RlbG8uUGFydGlkb01vZGVsby5maW5kKHtcImlkX3BhcnRpZG9cIjpwYXJhbXMuaWR9KVxuICAgICAgICByZXR1cm4gcmVzcG9uc2VcbiAgICB9IFxuICAgIHB1YmxpYyBhc3luYyBkZWxldGUoe2F1dGgscmVzcG9uc2UscGFyYW1zfSlcbiAgICB7XG4gICAgICAgIHRyeVxuICAgICAgICB7XG4gICAgICAgICAgICBhd2FpdCBhdXRoLnVzZSgnYXBpJykuYXV0aGVudGljYXRlKClcbiAgICAgICAgICAgIGNvbnN0IEVxdWlwb3M9YXdhaXQgUGFydGlkby5maW5kT3JGYWlsKHBhcmFtcy5pZClcbiAgICAgICAgICAgIGF3YWl0IEVxdWlwb3MuZGVsZXRlKClcbiAgICAgICAgICAgIFxuICAgICAgICB9Y2F0Y2hcbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmJhZFJlcXVlc3QoJ0VSUk9SJylcbiAgICAgICAgfVxuICAgIH1cblxufVxuIl19