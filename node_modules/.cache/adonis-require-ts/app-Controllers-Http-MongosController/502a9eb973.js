"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const PartidoModelo_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/PartidoModelo"));
const mongoose_1 = __importDefault(require("mongoose"));
class MongosController {
    async conexion() {
        await mongoose_1.default.connect('mongodb+srv://AngelVargas2003:Angel2003@basesdedatosenlanube.fsnez.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');
    }
    async mostrar({ response }) {
        try {
            await mongoose_1.default.connect('mongodb+srv://AngelVargas2003:Angel2003@basesdedatosenlanube.fsnez.mongodb.net/fifa?retryWrites=true&w=majority');
            response = await PartidoModelo_1.default.PartidoModelo.find();
            return response;
        }
        catch {
            return response.badRequest('Hubo un error');
        }
    }
    async insertar({ request, response }) {
        try {
            await mongoose_1.default.connect('mongodb+srv://AngelVargas2003:Angel2003@basesdedatosenlanube.fsnez.mongodb.net/fifa?retryWrites=true&w=majority');
            console.log('CONEXIÃ“N CON EXITO');
            const id = request.input('id_partido');
            const local = request.input('local');
            const visitante = request.input('visitante');
            const Estadio = request.input('Estadio');
            const crear = new PartidoModelo_1.default.PartidoModelo({ id_partido: id, local: local, visitante: visitante, Estadio: Estadio });
            await crear.save();
            return response.json(crear);
        }
        catch {
            return response.badRequest('Hubo un error');
        }
    }
    async modificar({ request, response }) {
        try {
            await mongoose_1.default.connect('mongodb+srv://AngelVargas2003:Angel2003@basesdedatosenlanube.fsnez.mongodb.net/fifa?retryWrites=true&w=majority');
            const id = request.input('id_partido');
            const comentarios = request.input('comentarios');
            console.log(id);
            response = await PartidoModelo_1.default.PartidoModelo.updateOne({ "id_partido": id }, { $push: { "comentario": comentarios } });
            return response;
        }
        catch {
            return response.badRequest('Hubo un error');
        }
    }
}
exports.default = MongosController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9uZ29zQ29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk1vbmdvc0NvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxtR0FBb0Q7QUFDcEQsd0RBQStCO0FBQy9CLE1BQXFCLGdCQUFnQjtJQUUxQixLQUFLLENBQUMsUUFBUTtRQUVqQixNQUFNLGtCQUFRLENBQUMsT0FBTyxDQUFDLDRIQUE0SCxDQUFDLENBQUE7SUFDeEosQ0FBQztJQUNNLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBQyxRQUFRLEVBQUM7UUFFM0IsSUFDQTtZQUNJLE1BQU0sa0JBQVEsQ0FBQyxPQUFPLENBQUMsaUhBQWlILENBQUMsQ0FBQTtZQUN6SSxRQUFRLEdBQUMsTUFBTSx1QkFBYSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtZQUNqRCxPQUFPLFFBQVEsQ0FBQTtTQUNsQjtRQUNELE1BQ0E7WUFDSSxPQUFPLFFBQVEsQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUFDLENBQUE7U0FDOUM7SUFDTCxDQUFDO0lBQ00sS0FBSyxDQUFDLFFBQVEsQ0FBQyxFQUFDLE9BQU8sRUFBQyxRQUFRLEVBQUM7UUFFcEMsSUFDQTtZQUNJLE1BQU0sa0JBQVEsQ0FBQyxPQUFPLENBQUMsaUhBQWlILENBQUMsQ0FBQTtZQUN6SSxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUE7WUFDakMsTUFBTSxFQUFFLEdBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQTtZQUNwQyxNQUFNLEtBQUssR0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1lBQ2xDLE1BQU0sU0FBUyxHQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUE7WUFDMUMsTUFBTSxPQUFPLEdBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQTtZQUN0QyxNQUFNLEtBQUssR0FBQyxJQUFJLHVCQUFhLENBQUMsYUFBYSxDQUFDLEVBQUMsVUFBVSxFQUFDLEVBQUUsRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLFNBQVMsRUFBQyxTQUFTLEVBQUMsT0FBTyxFQUFDLE9BQU8sRUFBQyxDQUFDLENBQUE7WUFDNUcsTUFBTSxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUE7WUFDbEIsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO1NBQzlCO1FBQ0QsTUFDQTtZQUNJLE9BQU8sUUFBUSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsQ0FBQTtTQUM5QztJQUNMLENBQUM7SUFDTSxLQUFLLENBQUMsU0FBUyxDQUFDLEVBQUMsT0FBTyxFQUFDLFFBQVEsRUFBQztRQUVyQyxJQUNBO1lBQ0EsTUFBTSxrQkFBUSxDQUFDLE9BQU8sQ0FBQyxpSEFBaUgsQ0FBQyxDQUFBO1lBQ3pJLE1BQU0sRUFBRSxHQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUE7WUFDcEMsTUFBTSxXQUFXLEdBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQTtZQUM5QyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1lBQ2YsUUFBUSxHQUFFLE1BQU0sdUJBQWEsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEVBQUMsWUFBWSxFQUFDLEVBQUUsRUFBQyxFQUFDLEVBQUMsS0FBSyxFQUFDLEVBQUMsWUFBWSxFQUFDLFdBQVcsRUFBQyxFQUFDLENBQUMsQ0FBQTtZQUMzRyxPQUFPLFFBQVEsQ0FBQTtTQUNkO1FBQ0QsTUFDQTtZQUNJLE9BQVEsUUFBUSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsQ0FBQTtTQUMvQztJQUNMLENBQUM7Q0FDSjtBQXRERCxtQ0FzREMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgdHlwZSB7IEh0dHBDb250ZXh0Q29udHJhY3QgfSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0h0dHBDb250ZXh0J1xuaW1wb3J0IFBhcnRpZG9Nb2RlbG8gZnJvbSBcIkFwcC9Nb2RlbHMvUGFydGlkb01vZGVsb1wiXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vbmdvc0NvbnRyb2xsZXIgXG57XG4gICAgcHVibGljIGFzeW5jIGNvbmV4aW9uKClcbiAgICB7XG4gICAgICAgIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vQW5nZWxWYXJnYXMyMDAzOkFuZ2VsMjAwM0BiYXNlc2RlZGF0b3NlbmxhbnViZS5mc25lei5tb25nb2RiLm5ldC9teUZpcnN0RGF0YWJhc2U/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5JylcbiAgICB9XG4gICAgcHVibGljIGFzeW5jIG1vc3RyYXIoe3Jlc3BvbnNlfSlcbiAgICB7XG4gICAgICAgIHRyeVxuICAgICAgICB7XG4gICAgICAgICAgICBhd2FpdCBtb25nb29zZS5jb25uZWN0KCdtb25nb2RiK3NydjovL0FuZ2VsVmFyZ2FzMjAwMzpBbmdlbDIwMDNAYmFzZXNkZWRhdG9zZW5sYW51YmUuZnNuZXoubW9uZ29kYi5uZXQvZmlmYT9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHknKVxuICAgICAgICAgICAgcmVzcG9uc2U9YXdhaXQgUGFydGlkb01vZGVsby5QYXJ0aWRvTW9kZWxvLmZpbmQoKVxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlXG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2hcbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmJhZFJlcXVlc3QoJ0h1Ym8gdW4gZXJyb3InKVxuICAgICAgICB9XG4gICAgfVxuICAgIHB1YmxpYyBhc3luYyBpbnNlcnRhcih7cmVxdWVzdCxyZXNwb25zZX0pXG4gICAge1xuICAgICAgICB0cnlcbiAgICAgICAge1xuICAgICAgICAgICAgYXdhaXQgbW9uZ29vc2UuY29ubmVjdCgnbW9uZ29kYitzcnY6Ly9BbmdlbFZhcmdhczIwMDM6QW5nZWwyMDAzQGJhc2VzZGVkYXRvc2VubGFudWJlLmZzbmV6Lm1vbmdvZGIubmV0L2ZpZmE/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5JylcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdDT05FWEnDk04gQ09OIEVYSVRPJylcbiAgICAgICAgICAgIGNvbnN0IGlkPXJlcXVlc3QuaW5wdXQoJ2lkX3BhcnRpZG8nKVxuICAgICAgICAgICAgY29uc3QgbG9jYWw9cmVxdWVzdC5pbnB1dCgnbG9jYWwnKVxuICAgICAgICAgICAgY29uc3QgdmlzaXRhbnRlPXJlcXVlc3QuaW5wdXQoJ3Zpc2l0YW50ZScpXG4gICAgICAgICAgICBjb25zdCBFc3RhZGlvPXJlcXVlc3QuaW5wdXQoJ0VzdGFkaW8nKVxuICAgICAgICAgICAgY29uc3QgY3JlYXI9bmV3IFBhcnRpZG9Nb2RlbG8uUGFydGlkb01vZGVsbyh7aWRfcGFydGlkbzppZCxsb2NhbDpsb2NhbCx2aXNpdGFudGU6dmlzaXRhbnRlLEVzdGFkaW86RXN0YWRpb30pXG4gICAgICAgICAgICBhd2FpdCBjcmVhci5zYXZlKClcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKGNyZWFyKVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5iYWRSZXF1ZXN0KCdIdWJvIHVuIGVycm9yJylcbiAgICAgICAgfVxuICAgIH1cbiAgICBwdWJsaWMgYXN5bmMgbW9kaWZpY2FyKHtyZXF1ZXN0LHJlc3BvbnNlfSlcbiAgICB7XG4gICAgICAgIHRyeVxuICAgICAgICB7XG4gICAgICAgIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vQW5nZWxWYXJnYXMyMDAzOkFuZ2VsMjAwM0BiYXNlc2RlZGF0b3NlbmxhbnViZS5mc25lei5tb25nb2RiLm5ldC9maWZhP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eScpXG4gICAgICAgIGNvbnN0IGlkPXJlcXVlc3QuaW5wdXQoJ2lkX3BhcnRpZG8nKVxuICAgICAgICBjb25zdCBjb21lbnRhcmlvcz1yZXF1ZXN0LmlucHV0KCdjb21lbnRhcmlvcycpXG4gICAgICAgIGNvbnNvbGUubG9nKGlkKVxuICAgICAgICByZXNwb25zZT0gYXdhaXQgUGFydGlkb01vZGVsby5QYXJ0aWRvTW9kZWxvLnVwZGF0ZU9uZSh7XCJpZF9wYXJ0aWRvXCI6aWR9LHskcHVzaDp7XCJjb21lbnRhcmlvXCI6Y29tZW50YXJpb3N9fSlcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlXG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2hcbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuICByZXNwb25zZS5iYWRSZXF1ZXN0KCdIdWJvIHVuIGVycm9yJylcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==